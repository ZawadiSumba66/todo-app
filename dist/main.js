(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(15),o=n.n(r),i=n(645),c=n.n(i)()(o());c.push([e.id,".hidden {\r\n  display: none;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.add {\r\n  color: white;\r\n  background-color: rgb(10, 175, 10);\r\n  border: none;\r\n}\r\n\r\n.add:focus {\r\n  outline: none;\r\n}\r\n\r\n.flex-column {\r\n  flex-direction: column;\r\n}\r\n\r\n.selected {\r\n  border: none;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.projects {\r\n  margin-right: 10px;\r\n  color: white;\r\n  background-color: #542e71;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100vh;\r\n}\r\n\r\n.delete-project {\r\n  border-radius: 100%;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.projects .project {\r\n  padding-top: 10px;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.delete {\r\n  border-bottom: 5px solid black;\r\n  border: none;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: rgb(253, 78, 78);\r\n}\r\n\r\n.delete:focus {\r\n  outline: none;\r\n}\r\n\r\n.d-flex {\r\n  display: flex;\r\n}\r\n\r\n.projects div {\r\n  width: 15vw;\r\n  height: 50px;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.active {\r\n  background-color: red;\r\n}\r\n\r\n.absolute {\r\n  position: absolute;\r\n}\r\n\r\n.forms {\r\n  min-width: 10%;\r\n  min-height: 100vh;\r\n  background-color: #ddd8b8;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 25px;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;AACf;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,kCAAkC;EAClC,YAAY;AACd;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,uBAAuB;EACvB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,YAAY;EACZ,yBAAyB;EACzB,MAAM;EACN,QAAQ;EACR,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,WAAW;EACX,YAAY;EACZ,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;EACjB,iBAAiB;EACjB,kBAAkB;EAClB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,8BAA8B;EAC9B,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,kCAAkC;AACpC;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;AACd;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,iBAAiB;EACjB,yBAAyB;EACzB,QAAQ;EACR,MAAM;EACN,aAAa;AACf",sourcesContent:[".hidden {\r\n  display: none;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\n.add {\r\n  color: white;\r\n  background-color: rgb(10, 175, 10);\r\n  border: none;\r\n}\r\n\r\n.add:focus {\r\n  outline: none;\r\n}\r\n\r\n.flex-column {\r\n  flex-direction: column;\r\n}\r\n\r\n.selected {\r\n  border: none;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n.projects {\r\n  margin-right: 10px;\r\n  color: white;\r\n  background-color: #542e71;\r\n  top: 0;\r\n  right: 0;\r\n  height: 100vh;\r\n}\r\n\r\n.delete-project {\r\n  border-radius: 100%;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-top: 30px;\r\n}\r\n\r\n.projects .project {\r\n  padding-top: 10px;\r\n  font-size: 1.2rem;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.delete {\r\n  border-bottom: 5px solid black;\r\n  border: none;\r\n  color: white;\r\n  font-weight: bold;\r\n  background-color: rgb(253, 78, 78);\r\n}\r\n\r\n.delete:focus {\r\n  outline: none;\r\n}\r\n\r\n.d-flex {\r\n  display: flex;\r\n}\r\n\r\n.projects div {\r\n  width: 15vw;\r\n  height: 50px;\r\n}\r\n\r\n.pointer {\r\n  cursor: pointer;\r\n}\r\n\r\n.active {\r\n  background-color: red;\r\n}\r\n\r\n.absolute {\r\n  position: absolute;\r\n}\r\n\r\n.forms {\r\n  min-width: 10%;\r\n  min-height: 100vh;\r\n  background-color: #ddd8b8;\r\n  right: 0;\r\n  top: 0;\r\n  padding: 25px;\r\n}\r\n"],sourceRoot:""}]);const a=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var a=0;a<e.length;a++){var d=[].concat(e[a]);r&&o[d[0]]||(n&&(d[2]?d[2]="".concat(n," and ").concat(d[2]):d[2]=n),t.push(d))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var c,a=e[Symbol.iterator]();!(r=(c=a.next()).done)&&(n.push(c.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],c=o[3];if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),d="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),s="/*# ".concat(d," */"),l=c.sources.map((function(e){return"/*# sourceURL=".concat(c.sourceRoot||"").concat(e," */")}));return[i].concat(l).concat([s]).join("\n")}return[i].join("\n")}},379:(e,t,n)=>{var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function c(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function a(e,t){for(var n={},r=[],o=0;o<e.length;o++){var a=e[o],d=t.base?a[0]+t.base:a[0],s=n[d]||0,l="".concat(d," ").concat(s);n[d]=s+1;var A=c(l),u={css:a[1],media:a[2],sourceMap:a[3]};-1!==A?(i[A].references++,i[A].updater(u)):i.push({identifier:l,updater:f(u,t),references:1}),r.push(l)}return r}function d(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var c=o(e.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(t)}return t}var s,l=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function A(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=l(t,o);else{var i=document.createTextNode(o),c=e.childNodes;c[t]&&e.removeChild(c[t]),c.length?e.insertBefore(i,c[t]):e.appendChild(i)}}function u(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,h=0;function f(e,t){var n,r,o;if(t.singleton){var i=h++;n=p||(p=d(t)),r=A.bind(null,n,i,!1),o=A.bind(null,n,i,!0)}else n=d(t),r=u.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=a(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=c(n[r]);i[o].references--}for(var d=a(e,t),s=0;s<n.length;s++){var l=c(n[s]);0===i[l].references&&(i[l].updater(),i.splice(l,1))}n=d}}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{class e{constructor(e,t=[],n=!1){this.name=e,this.list=t,this.active=n}}e.prototype.addTodo=function(e){this.list.push(e)};const t=(()=>{let t=[];return{createProject:(n,r=[])=>{const o=new e(n,r);return t.push(o),o},getProjectsArray:()=>t,deleteProject:e=>t.splice(e,1),getActive:()=>{for(let e=0;e<t.length;e+=1)if(t[e].active)return e;return 0},setProjectsArray:e=>{t=e}}})(),r=t;class o{constructor(e,t,n,r){this.title=e,this.description=t,this.date=n,this.priority=r}}o.prototype.edit=function(e,t,n,r){this.title=e,this.description=t,this.date=n,this.priority=r};const i=(e,t,n,r)=>new o(e,t,n,r),c=(e,t)=>e.splice(t,1),a=()=>{const e=t.getProjectsArray();localStorage.projects=JSON.stringify(e)},d=()=>{if(localStorage.projects){const n=JSON.parse(localStorage.projects);for(let t=0;t<n.length;t+=1){Object.setPrototypeOf(n[t],e.prototype);const{list:r}=n[t];for(let e=0;e<r.length;e+=1)Object.setPrototypeOf(r[e],o.prototype)}t.setProjectsArray(n)}},s=e=>{const t=document.createElement("label");t.setAttribute("for",`${e}`);let n=e.charAt(0).toUpperCase();return n=n.concat(e.slice(1)),t.textContent=n,t},l=(e,t)=>{const n=document.createElement("input");return n.setAttribute("id",`${e}`),n.classList.add("m-bot-10"),n.type=t,n},A=()=>{const e=document.querySelectorAll("#projects div");for(let t=0;t<e.length;t+=1)e[t].classList.remove("selected")},u=()=>{const e=r.getProjectsArray();for(let t=0;t<e.length;t+=1)e[t].active=!1},p=(e,t)=>{const n=document.createElement("div");n.classList.add("m-bot-10");const r=document.createElement("div");r.classList.add("todo-items");const o=document.createElement("p"),i=document.createElement("p"),d=document.createElement("p"),s=document.createElement("button");return s.classList.add("delete"),s.textContent="Delete",s.addEventListener("click",(()=>{c(e,t),n.parentNode.removeChild(n),a()})),o.textContent=e[t].title,i.textContent=e[t].description,d.textContent=e[t].date,r.appendChild(o),r.appendChild(i),r.appendChild(d),r.appendChild(s),n.appendChild(r),n},h=(e,t)=>{const n=t,o=r.getProjectsArray();if(n.innerHTML="",0===o.length)return;const i=document.createElement("button");i.classList.add("add"),i.setAttribute("id",e);const c=document.createElement("h3");c.textContent=o[e].name,i.textContent="Add Task",i.addEventListener("click",(()=>{const t=document.querySelector(".forms .todo-form");t.setAttribute("id",e),t.querySelector("h3").textContent="New Todo",t.classList.toggle("hidden")})),n.appendChild(c),n.appendChild(i);const{list:a}=o[e];for(let e=0;e<a.length;e+=1){const t=p(a,e);n.appendChild(t)}},f=(e,t=0,n,o)=>{const i=n,c=o;i.innerHTML="";for(let n=0;n<e.length;n+=1){const o=document.createElement("div");o.classList.add("d-flex"),e[n].active=!1,n===t&&(e[n].active=!0);const d=document.createElement("p");d.classList.add("project");const s=document.createElement("button");s.classList.add("delete-project"),s.textContent="X",s.addEventListener("click",(()=>{e[n].active?(r.deleteProject(n),i.removeChild(o),h(0,c)):(r.deleteProject(n),f(e,r.getActive(),i,c)),a()})),d.classList.add("pointer"),d.textContent=e[n].name,d.addEventListener("click",(()=>{document.querySelector(".todo-form").classList.add("hidden"),h(n,c),u(),A(),o.classList.add("d-flex"),e[n].active=!0})),o.classList.add("d-flex"),o.appendChild(d),o.appendChild(s),i.appendChild(o)}};var m=n(379),C=n.n(m),E=n(426);C()(E.Z,{insert:"head",singleton:!1}),E.Z.locals,localStorage.projects?d():r.createProject("Example",[i("New Todo","You can create Todos","12-10-2021",1)]),(e=>{document.querySelector("#container");const t=document.querySelector(".content");t.classList.add("d-flex","content");const n=document.createElement("div"),o=document.createElement("div"),c=document.createElement("div");c.classList.add("forms","absolute"),n.setAttribute("id","projects","d-flex"),n.classList.add("projects"),o.setAttribute("id","todo"),o.classList.add("todo");const d=(e=>{const t=e,n=document.createElement("form");n.classList.add("hidden","todo-form");const o=document.createElement("div");o.classList.add("d-flex","flex-column");const c=document.createElement("h3");c.classList.add("m-bot-10","bold","title");const d=s("title"),A=l("title","text");A.value="";const u=s("description"),p=document.createElement("textarea");p.setAttribute("id","description"),p.value="";const f=s("due"),m=l("due","date");m.value="";const C=l("Submit","submit");return C.value="Submit",C.addEventListener("click",(e=>{e.preventDefault();const o=n.querySelector("#title"),c=n.querySelector("#description"),d=n.querySelector("#due"),s=(n.querySelector("#priority"),i(o.value,c.value,d.value)),l=r.getProjectsArray(),A=n.id;l[A].addTodo(s),h(A,t),n.reset(),a()})),o.appendChild(c),o.appendChild(d),o.appendChild(A),o.appendChild(u),o.appendChild(p),o.appendChild(f),o.appendChild(m),o.appendChild(C),n.appendChild(o),n})(o),A=((e,t,n)=>{const o=e,i=t,c=document.createElement("form"),d=document.createElement("div");d.classList.add("d-flex","flex-column");const A=document.createElement("h3");A.textContent="New Project",A.classList.add("m-bot-10","bold","title");const u=s("name"),p=l("name","text"),m=document.createElement("button");return m.addEventListener("click",(e=>{e.preventDefault(),r.createProject(p.value);const t=r.getProjectsArray();f(t,t.length-1,o,i),h(t.length-1,i),c.reset(),n.classList.add("hidden"),a()})),m.textContent="Submit",d.appendChild(A),d.appendChild(u),d.appendChild(p),d.appendChild(m),c.appendChild(d),c})(n,o,d);c.appendChild(A),c.appendChild(d),t.appendChild(c),t.appendChild(n),t.appendChild(o),h(0,o),f(e,0,n,o)})(r.getProjectsArray())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,